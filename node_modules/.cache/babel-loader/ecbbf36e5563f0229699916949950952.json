{"ast":null,"code":"import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\nconst initialState = [];\nconst Alert_Err = function () {\n  let state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  let action = arguments.length > 1 ? arguments[1] : undefined;\n  const {\n    type,\n    payload\n  } = action;\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter(alert => alert.id !== payload);\n    default:\n      return state;\n  }\n};\n_c = Alert_Err;\nexport default Alert_Err;\nvar _c;\n$RefreshReg$(_c, \"Alert_Err\");","map":{"version":3,"names":["SET_ALERT","REMOVE_ALERT","initialState","Alert_Err","state","action","type","payload","filter","alert","id"],"sources":["C:/3D Gallery/frontend/src/reducers/alert.js"],"sourcesContent":["import { SET_ALERT, REMOVE_ALERT } from \"../actions/types\";\n\nconst initialState = [];\n\nconst Alert_Err= (state = initialState, action)=> {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase SET_ALERT:\n\t\t\treturn [...state, payload];\n\t\tcase REMOVE_ALERT:\n\t\t\treturn state.filter((alert) => alert.id !== payload);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}\n\nexport default Alert_Err;"],"mappings":"AAAA,SAASA,SAAS,EAAEC,YAAY,QAAQ,kBAAkB;AAE1D,MAAMC,YAAY,GAAG,EAAE;AAEvB,MAAMC,SAAS,GAAE,YAAiC;EAAA,IAAhCC,KAAK,uEAAGF,YAAY;EAAA,IAAEG,MAAM;EAC7C,MAAM;IAAEC,IAAI;IAAEC;EAAQ,CAAC,GAAGF,MAAM;EAEhC,QAAQC,IAAI;IACX,KAAKN,SAAS;MACb,OAAO,CAAC,GAAGI,KAAK,EAAEG,OAAO,CAAC;IAC3B,KAAKN,YAAY;MAChB,OAAOG,KAAK,CAACI,MAAM,CAAEC,KAAK,IAAKA,KAAK,CAACC,EAAE,KAAKH,OAAO,CAAC;IACrD;MACC,OAAOH,KAAK;EAAC;AAEhB,CAAC;AAAA,KAXKD,SAAS;AAaf,eAAeA,SAAS;AAAC;AAAA"},"metadata":{},"sourceType":"module"}